image: ubuntu:bionic

.before_npm: &before_npm
  - apt-get update -yqq
  - apt-get install -yqq build-essential curl default-jdk
  - curl -sL https://deb.nodesource.com/setup_10.x | bash -
  - apt-get install -yqq nodejs
  - npm --version
  - npm install --unsafe-perm=true

.before_git: &before_git
  - apt-get update -yqq
  - apt-get install -yqq git openssh-client
  - git --version
  - git config --global user.email "${GITLAB_USER_EMAIL}"
  - git config --global user.name "${GITLAB_USER_NAME}"
  - git remote set-url origin --push "git@${CI_SERVER_HOST}:${CI_PROJECT_PATH}"
  - git remote -v
  - eval $(ssh-agent -s)
  - chmod 700 "${CI_DEPLOY_KEY}"
  - ssh-add "${CI_DEPLOY_KEY}"
  - mkdir -p ~/.ssh
  - echo -e "Host ${CI_SERVER_HOST}\n\tStrictHostKeyChecking no" >>
    ~/.ssh/config
  - chmod 700 ~/.ssh

.script_checkout_branch: &script_checkout_branch
  - git checkout ${CI_COMMIT_BRANCH}
  - git reset --hard ${CI_COMMIT_SHA}

.script_merge_master: &script_merge_master
  - git merge origin/master
  - git push origin HEAD:master
  - git push --tags

.script_npm_publish: &script_npm_publish
  - npm config set //registry.npmjs.org/:_authToken ${NPM_TOKEN}
  - npm publish

stages:
  - test
  - promotion
  - version
  - backmerge

include:
  - template: Code-Quality.gitlab-ci.yml
  - template: Dependency-Scanning.gitlab-ci.yml
  - template: License-Scanning.gitlab-ci.yml

test:
  stage: test
  before_script:
    - *before_npm
  script:
    - npm run lint:pkg
    - npm run unit
  artifacts:
    paths:
      - npm-debug.log
    expire_in: 1 month

promote_patch:
  stage: promotion
  when: manual
  only:
    refs:
      - develop
    variables:
      - $CI_COMMIT_MESSAGE !~ /\[ci\]/
  environment: patch
  before_script:
    - *before_npm
    - *before_git
  script:
    - *script_checkout_branch
    - *script_merge_master

promote_minor:
  stage: promotion
  when: manual
  only:
    refs:
      - develop
    variables:
      - $CI_COMMIT_MESSAGE !~ /\[ci\]/
  environment: minor
  before_script:
    - *before_npm
    - *before_git
  script:
    - *script_checkout_branch
    - npm version minor --unsafe-perm=true -m "Minor version %s"
    - *script_merge_master
    - *script_npm_publish

promote_major:
  stage: promotion
  when: manual
  only:
    refs:
      - develop
    variables:
      - $CI_COMMIT_MESSAGE !~ /\[ci\]/
  environment: major
  before_script:
    - *before_npm
    - *before_git
  script:
    - *script_checkout_branch
    - npm version major --unsafe-perm=true -m "Major version %s"
    - *script_merge_master
    - *script_npm_publish

patch:
  stage: version
  only:
    refs:
      - master
    variables:
      - $CI_COMMIT_MESSAGE !~ /\[ci\]/
  allow_failure: true
  before_script:
    - *before_npm
    - *before_git
  script:
    - npm version patch --unsafe-perm=true -m "[ci] Patch version %s"
    - git push origin HEAD:${CI_COMMIT_BRANCH}
    - git push --tags
    - *script_npm_publish

backmerge:
  stage: backmerge
  only:
    refs:
      - master
    variables:
      - $CI_COMMIT_MESSAGE =~ /\[ci\]/
  before_script:
    - *before_git
  script:
    - git checkout develop
    - git pull origin develop
    - git merge origin/${CI_COMMIT_BRANCH} --no-ff -m "[ci] Backmerge ${CI_COMMIT_BRANCH} -> develop"
    - git push origin develop
